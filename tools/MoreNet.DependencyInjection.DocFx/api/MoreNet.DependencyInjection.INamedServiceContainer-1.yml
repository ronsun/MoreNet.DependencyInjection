### YamlMime:ManagedReference
items:
- uid: MoreNet.DependencyInjection.INamedServiceContainer`1
  commentId: T:MoreNet.DependencyInjection.INamedServiceContainer`1
  id: INamedServiceContainer`1
  parent: MoreNet.DependencyInjection
  children:
  - MoreNet.DependencyInjection.INamedServiceContainer`1.GetService(System.String)
  langs:
  - csharp
  - vb
  name: INamedServiceContainer<TService>
  nameWithType: INamedServiceContainer<TService>
  fullName: MoreNet.DependencyInjection.INamedServiceContainer<TService>
  type: Interface
  source:
    remote:
      path: src/MoreNet.DependencyInjection/INamedServiceContainer.cs
      branch: master
      repo: https://github.com/ronsun/MoreNet.DependencyInjection.git
    id: INamedServiceContainer
    path: ../../src/MoreNet.DependencyInjection/INamedServiceContainer.cs
    startLine: 9
  assemblies:
  - MoreNet.DependencyInjection
  namespace: MoreNet.DependencyInjection
  summary: "\nAn friendly interface inherit from <xref href=\"System.Collections.Generic.IReadOnlyDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>.\nThe key in <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> type and value in <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TService</code> type.\n"
  example: []
  syntax:
    content: >-
      public interface INamedServiceContainer<TService>
          where TService : INameable
    typeParameters:
    - id: TService
      description: The service type.
    content.vb: Public Interface INamedServiceContainer(Of TService As INameable)
  nameWithType.vb: INamedServiceContainer(Of TService)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: MoreNet.DependencyInjection.INamedServiceContainer(Of TService)
  name.vb: INamedServiceContainer(Of TService)
- uid: MoreNet.DependencyInjection.INamedServiceContainer`1.GetService(System.String)
  commentId: M:MoreNet.DependencyInjection.INamedServiceContainer`1.GetService(System.String)
  id: GetService(System.String)
  parent: MoreNet.DependencyInjection.INamedServiceContainer`1
  langs:
  - csharp
  - vb
  name: GetService(String)
  nameWithType: INamedServiceContainer<TService>.GetService(String)
  fullName: MoreNet.DependencyInjection.INamedServiceContainer<TService>.GetService(System.String)
  type: Method
  source:
    remote:
      path: src/MoreNet.DependencyInjection/INamedServiceContainer.cs
      branch: master
      repo: https://github.com/ronsun/MoreNet.DependencyInjection.git
    id: GetService
    path: ../../src/MoreNet.DependencyInjection/INamedServiceContainer.cs
    startLine: 17
  assemblies:
  - MoreNet.DependencyInjection
  namespace: MoreNet.DependencyInjection
  summary: "\nGet service in <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TService</code> type.\n"
  example: []
  syntax:
    content: TService GetService(string name)
    parameters:
    - id: name
      type: System.String
      description: Name.
    return:
      type: '{TService}'
      description: Found service.
    content.vb: Function GetService(name As String) As TService
  overload: MoreNet.DependencyInjection.INamedServiceContainer`1.GetService*
  nameWithType.vb: INamedServiceContainer(Of TService).GetService(String)
  fullName.vb: MoreNet.DependencyInjection.INamedServiceContainer(Of TService).GetService(System.String)
references:
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MoreNet.DependencyInjection
  commentId: N:MoreNet.DependencyInjection
  name: MoreNet.DependencyInjection
  nameWithType: MoreNet.DependencyInjection
  fullName: MoreNet.DependencyInjection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MoreNet.DependencyInjection.INamedServiceContainer`1.GetService*
  commentId: Overload:MoreNet.DependencyInjection.INamedServiceContainer`1.GetService
  name: GetService
  nameWithType: INamedServiceContainer<TService>.GetService
  fullName: MoreNet.DependencyInjection.INamedServiceContainer<TService>.GetService
  nameWithType.vb: INamedServiceContainer(Of TService).GetService
  fullName.vb: MoreNet.DependencyInjection.INamedServiceContainer(Of TService).GetService
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  commentId: '!:TService'
  name: TService
  nameWithType: TService
  fullName: TService
